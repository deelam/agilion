componentIds=amq, sessions, tasker, jobMgrType, workers, neoWorkers
componentIdsToStart=amq, sessions, tasker, jobMgrType, workers, neoWorkers


include=startup.props

# ActiveMQ service: shares connectionUrl
amq.classname=net.deelam.coordworkers.AmqServiceComp
amq.brokerUrls=tcp://localhost:33330,stomp://localhost:33331


# 'connectionTcpUrl' is a SharedValue set by AmqServiceComp named 'amq' in this property file
needsAmq.brokerUrl.ref=amq/connectionTcpUrl

sessions.classname=dataengine.main.SessionsDbComponent
sessions.include=needsAmq

tasker.classname=dataengine.main.TaskerComponent
tasker.include=needsAmq
tasker.jobCreators=dataengine.tasker.jobcreators.AddSourceDataset, dataengine.tasker.jobcreators.MergeDatasetToNeo, dataengine.tasker.jobcreators.ExportDataset
tasker.exportDir=/home/dlam/dev/agilionReal/dataengine/dataio/exportDir
tasker.dispatcherComponentType=jobMgrType

jobMgrType.classname=dataengine.main.JobMgrComponent
jobMgrType.include=needsAmq
// TODO: have workers discover msgT.newJobAvailable by asking jobDto.jobBoardRpcAddr
jobMgrType.msgT.newJobAvailable=jobMgrA_newJobAvailableTopic_toJobConsumers
jobMgrType.msgQ.dispatcherRpcAddr=jobMgrA_dispatcherQueue
jobMgrType.msgQ.jobBoardRpcAddr=jobMgrA_jobBoardQueue

workers.classname=dataengine.main.WorkersComponent
// TODO: remove; use jobDto.taskerRpcAddr,.dispatcherRpcAddr,.jobBoardRpcAddr,etc instead
workers.include=needsAmq, jobMgrType.msgT, jobMgrType.msgQ
workers.sqlConnect=root:dataengine-mysql@localhost:3306

# supported data schemas
workers.dataSchemas=TIDE, I94Visa

# dshape = http://datashape.readthedocs.io/en/latest/types.html
workers.TIDE.dshape=var * { \
  'dataSource': ?string,\
  'citizenNatural': ?string,\
  'countryBirth': ?string,\
  'countryCitizen': ?string,\
  'dateBirth': ?string,\
  'flightTraining': ?string,\
  'gender': ?string,\
  'nameFirst': ?string,\
  'nameLast': ?string,\
  'fullNameIGNORE': ?string,\
  'nameKST': ?string,\
  'nameNick': ?string,\
  'numBiometric': ?string,\
  'numFBI': ?string,\
  'numTide': ?string,\
  'statusLPR': ?string,\
  'statusMarital': ?string,\
  'statusTIDE': ?string,\
  'statusUSP': ?string,\
  'terrGroupMem': ?string,\
  'tideCateg': ?string,\
  'title': ?string,\
  'tsaNoFly': ?string,\
  'visaNum': ?string,\
  'visaStatusRevoke': ?string,\
  'numPass': ?string\
  }
workers.I94Visa.dshape=var * { \
  'dataSource': ?string,\
  'addrStreet': ?string,\
  'addrStreetPerm': ?string,\
  'cityIGNORE': ?string,\
  'dateBirth': ?string,\
  'visaIssueCity': ?string,\
  'countryEmbark': ?string,\
  'countryCitizen': ?string,\
  'visaIssueDate': ?string,\
  'nameLast': ?string,\
  'nameFirst': ?string,\
  'fullNameIGNORE': ?string,\
  'carrier': ?string,\
  'numIdDoc': ?string,\
  'numPass': ?string,\
  'gender': ?string\
  }

# concepts to export from each data format
workers.TIDE.exportConcepts=Person, Country, CITIZEN_OF
workers.I94Visa.exportConcepts=Person, Country, CITIZEN_OF

# how data is extracted for each concept
# syntax: workers.<exportConcept>.selectHeader
# TIDE
workers.TIDE.Person.selectHeader='personId', 'nameLast', 'nameFirst', 'nameNick', 'nameKST', 'numBiometric', 'statusMarital', 'gender', 'countryCitizen', 'dateBirth', 'countryBirth', 'citizenNatural', 'flightTraining', 'tsaNoFly', 'visaNum', 'visaStatusRevoke'
workers.TIDE.Person.selectFields=concat(nameLast, ' ', nameFirst) as personId, nameLast, nameFirst, nameNick, nameKST, numBiometric, statusMarital, gender, countryCitizen, dateBirth, countryBirth, citizenNatural, flightTraining, tsaNoFly, visaNum, visaStatusRevoke
workers.TIDE.Person.selectDistinct=false

workers.TIDE.Country.selectHeader='countryId', 'countryCitizen'
workers.TIDE.Country.selectFields=countryCitizen as countryId, countryCitizen
workers.TIDE.Country.selectDistinct=true

workers.TIDE.CITIZEN_OF.selectHeader='personId', 'countryId'
workers.TIDE.CITIZEN_OF.selectFields=concat(nameLast, ' ', nameFirst) as personId, countryCitizen as countryId
workers.TIDE.CITIZEN_OF.selectDistinct=false

# I94Visa
workers.I94Visa.Person.selectHeader='personId', 'nameLast', 'nameFirst'
workers.I94Visa.Person.selectFields=concat(nameLast, ' ', nameFirst) as personId, nameLast, nameFirst
workers.I94Visa.Person.selectDistinct=false

workers.I94Visa.Country.selectHeader='countryId', 'countryCitizen'
workers.I94Visa.Country.selectFields=countryCitizen as countryId, countryCitizen
workers.I94Visa.Country.selectDistinct=true

workers.I94Visa.CITIZEN_OF.selectHeader='personId', 'countryId'
workers.I94Visa.CITIZEN_OF.selectFields=concat(nameLast, ' ', nameFirst) as personId, countryCitizen as countryId
workers.I94Visa.CITIZEN_OF.selectDistinct=false


neoWorkers.classname=dataengine.workers.neo4j.NeoWorkersComponent
neoWorkers.include=needsAmq, jobMgrType.msgT, jobMgrType.msgQ

# path to properties need to load CSV files into Neo4j
neoWorkers.TIDE.neo4jCsvLoadPropFile=workerConf/neo4j-tide.props
neoWorkers.I94Visa.neo4jCsvLoadPropFile=workerConf/neo4j-i94.props

