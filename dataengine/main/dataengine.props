
# Components to configure using settings in this property file
componentIds=amq, sessions, tasker, jobMgrType, workers, neoWorkers

# Components to start in the JVM that uses this property file
componentIdsToStart=amq, sessions, tasker, jobMgrType, workers, neoWorkers

# include settings from other files
include=startup.props

############### ActiveMQ communication bus component
# ActiveMQ service: shares connectionUrl
amq.classname=net.deelam.coordworkers.AmqServiceComp
amq.brokerUrls=tcp://localhost:33330,stomp://localhost:33331

###### Variables used by 'include' settings below
# 'connectionTcpUrl' is a SharedValue set by AmqServiceComp named 'amq' in this property file
needsAmq.brokerUrl.ref=amq/connectionTcpUrl

############### Session DB component
sessions.classname=dataengine.main.SessionsDbComponent
sessions.include=needsAmq

############### Tasker component converts Requests into Jobs
tasker.classname=dataengine.main.TaskerComponent
tasker.include=needsAmq
tasker.jobCreators=dataengine.tasker.jobcreators.AddSourceDataset, dataengine.tasker.jobcreators.MergeDatasetToNeo, dataengine.tasker.jobcreators.ExportDataset
tasker.exportDir=/home/dlam/dev/agilionReal/dataengine/dataio/exportDir
tasker.dispatcherComponentType=jobMgrType

############### JobManager component provides jobs to Workers
jobMgrType.classname=dataengine.main.JobMgrComponent
jobMgrType.include=needsAmq
// TODO: have workers discover msgT.newJobAvailable by asking jobDto.jobBoardRpcAddr
jobMgrType.msgT.newJobAvailable=jobMgrA_newJobAvailableTopic_toJobConsumers
jobMgrType.msgQ.dispatcherRpcAddr=jobMgrA_dispatcherQueue
jobMgrType.msgQ.jobBoardRpcAddr=jobMgrA_jobBoardQueue

############### Worker components
workers.classname=dataengine.main.WorkersComponent
// TODO: remove; use jobDto.taskerRpcAddr,.dispatcherRpcAddr,.jobBoardRpcAddr,etc instead
workers.include=needsAmq, jobMgrType.msgT, jobMgrType.msgQ
workers.sqlConnect=root:dataengine-mysql@localhost:3306

# supported data schemas
workers.dataSchemas=TIDE, I94Visa, FB, FBEdges, CDR, CDREdges

# dshape = http://datashape.readthedocs.io/en/latest/types.html
workers.TIDE.dshape=var * { \
  'dataSource': ?string,\
  'citizenNatural': ?string,\
  'countryBirth': ?string,\
  'countryCitizen': ?string,\
  'dateBirth': ?string,\
  'flightTraining': ?string,\
  'gender': ?string,\
  'nameFirst': ?string,\
  'nameLast': ?string,\
  'fullNameIGNORE': ?string,\
  'nameKST': ?string,\
  'nameNick': ?string,\
  'numBiometric': ?string,\
  'numFBI': ?string,\
  'numTide': ?string,\
  'statusLPR': ?string,\
  'statusMarital': ?string,\
  'statusTIDE': ?string,\
  'statusUSP': ?string,\
  'terrGroupMem': ?string,\
  'tideCateg': ?string,\
  'title': ?string,\
  'tsaNoFly': ?string,\
  'visaNum': ?string,\
  'visaStatusRevoke': ?string,\
  'numPass': ?string\
  }
workers.I94Visa.dshape=var * { \
  'dataSource': ?string,\
  'addrStreet': ?string,\
  'addrStreetPerm': ?string,\
  'cityIGNORE': ?string,\
  'dateBirth': ?string,\
  'visaIssueCity': ?string,\
  'countryEmbark': ?string,\
  'countryCitizen': ?string,\
  'visaIssueDate': ?string,\
  'nameLast': ?string,\
  'nameFirst': ?string,\
  'fullNameIGNORE': ?string,\
  'carrier': ?string,\
  'numIdDoc': ?string,\
  'numPass': ?string,\
  'gender': ?string\
  }
workers.FB.dshape=var * { \
  'accountId' : ?string,\
  'personId' : ?string,\
  'albumIdIGNORE' : ?string,\
  'applicationIGNORE' : ?string,\
  'commentsNumIGNORE' : ?string,\
  'createdTimeIGNORE' : ?string,\
  'fbItemTypeIGNORE' : ?string,\
  'linkIGNORE' : ?string,\
  'parentItemnumIGNORE' : ?string,\
  'pictureUrlIGNORE' : ?string,\
  'postIdIGNORE' : ?string,\
  'recipientsIGNORE' : ?string,\
  'recipientsIdIGNORE' : ?string,\
  'threadIdIGNORE' : ?string,\
  'ToIGNORE' : ?string,\
  'toIdIGNORE' : ?string,\
  'updatedTimeIGNORE' : ?string,\
  'uriIGNORE' : ?string,\
  'userId' : ?string,\
  'userImgIGNORE' : ?string,\
  'userName' : ?string\
  }
workers.FBEdges.dshape=var * { \
  'accountIdFROM' : ?string,\
  'accountIdTO' : ?string\
  }
workers.CDR.dshape=var * { \
  'dataSource' : ?string,\
  'phoneMSISDN' : ?string,\
  'phoneAreaCode' : ?string,\
  'phoneNumber' : ?string,\
  'phoneIMSI' : ?string,\
  'phoneIMEI' : ?string,\
  'nameFirst' : ?string,\
  'nameMiddle' : ?string,\
  'nameLast' : ?string,\
  'fullNameIGNORE' : ?string,\
  'addrStreet' : ?string,\
  'addrZipCode' : ?string,\
  'cityIGNORE' : ?string,\
  'stateIGNORE' : ?string,\
  'stateAbbrIGNORE' : ?string,\
  'countyIGNORE' : ?string,\
  'lat' : ?string,\
  'lon' : ?string,\
  'gender' : ?string,\
  'ageIGNORE' : ?string\
}
workers.CDREdges.dshape=var * { \
  'dataSource' : ?string,\
  'phoneCallDate' : ?string,\
  'phoneMSISDNSource' : ?string,\
  'phoneMSISDNTarget' : ?string,\
  'numberCalls' : ?string,\
  'minutes' : ?string,\
  'text' : ?string,\
  'sms' : ?string,\
  'classification' : ?string,\
  'family' : ?string\
}

# concepts to export from each data format
workers.TIDE.exportConcepts=Person, Country, CITIZEN_OF
workers.I94Visa.exportConcepts=Person, Country, CITIZEN_OF
workers.FB.exportConcepts=Person
workers.FBEdges.exportConcepts=FB_KNOWS
workers.CDR.exportConcepts=Person
workers.CDREdges.exportConcepts=PHONE_COMM

# how data is extracted for each concept
# syntax: workers.<exportConcept>.selectHeader
# TIDE
workers.TIDE.Person.selectHeader='personId', 'nameLast', 'nameFirst', 'nameNick', 'nameKST', 'numPass', 'numBiometric', 'numFBI', 'numTide', 'statusLPR', 'statusMarital', 'statusTIDE', 'statusUSP', 'gender', 'countryCitizen', 'dateBirth', 'countryBirth', 'citizenNatural', 'flightTraining', 'tsaNoFly', 'visaNum', 'visaStatusRevoke', 'dataSource', 'terrGroupMem', 'tideCateg', 'title'
workers.TIDE.Person.selectFields=concat(nameLast, ' ', nameFirst) as personId, nameLast, nameFirst, nameNick, nameKST, numPass, numBiometric, numFBI, numTide, statusLPR, statusMarital, statusTIDE, statusUSP, gender, countryCitizen, dateBirth, countryBirth, citizenNatural, flightTraining, tsaNoFly, visaNum, visaStatusRevoke, dataSource, terrGroupMem, tideCateg, title
workers.TIDE.Person.selectDistinct=true

workers.TIDE.Country.selectHeader='countryId', 'countryCitizen'
workers.TIDE.Country.selectFields=countryCitizen as countryId, countryCitizen
workers.TIDE.Country.selectDistinct=true

workers.TIDE.CITIZEN_OF.selectHeader='personId', 'countryId', 'dataSource'
workers.TIDE.CITIZEN_OF.selectFields=concat(nameLast, ' ', nameFirst) as personId, countryCitizen as countryId, dataSource
workers.TIDE.CITIZEN_OF.selectDistinct=false

# I94Visa
workers.I94Visa.Person.selectHeader='personId', 'nameLast', 'nameFirst', 'dataSource', 'addrStreet', 'addrStreetPerm', 'dateBirth', 'countryEmbark', 'countryCitizen', 'visaIssueCity', 'visaIssueDate', 'carrier', 'numIdDoc', 'numPass', 'gender'
workers.I94Visa.Person.selectFields=concat(nameLast, ' ', nameFirst) as personId, nameLast, nameFirst, dataSource, addrStreet, addrStreetPerm, dateBirth, countryEmbark, countryCitizen, visaIssueCity, visaIssueDate, carrier, numIdDoc, numPass, gender
workers.I94Visa.Person.selectDistinct=true

workers.I94Visa.Country.selectHeader='countryId', 'countryCitizen'
workers.I94Visa.Country.selectFields=countryCitizen as countryId, countryCitizen
workers.I94Visa.Country.selectDistinct=true

workers.I94Visa.CITIZEN_OF.selectHeader='personId', 'countryId', 'dataSource'
workers.I94Visa.CITIZEN_OF.selectFields=concat(nameLast, ' ', nameFirst) as personId, countryCitizen as countryId, dataSource
workers.I94Visa.CITIZEN_OF.selectDistinct=false

# FB
workers.FB.Person.selectHeader='personId', 'accountId', 'userId', 'userName'
workers.FB.Person.selectFields=personId, accountId, userId, userName
workers.FB.Person.selectDistinct=true

# FBEdges
workers.FBEdges.FB_KNOWS.selectHeader='accountIdFROM', 'accountIdTO'
workers.FBEdges.FB_KNOWS.selectFields=accountIdFROM, accountIdTO
workers.FBEdges.FB_KNOWS.selectDistinct=false

# CDR
workers.CDR.Person.selectHeader='personId', 'nameLast', 'nameFirst', 'nameMiddle', 'phoneMSISDN', 'dataSource', 'phoneAreaCode', 'phoneNumber', 'phoneIMSI', 'phoneIMEI', 'addrStreet', 'addrZipCode', 'lat', 'lon', 'gender'
workers.CDR.Person.selectFields=concat(nameLast, ' ', nameFirst) as personId, nameLast, nameFirst, nameMiddle, phoneMSISDN, dataSource, phoneAreaCode, phoneNumber, phoneIMSI, phoneIMEI, addrStreet, addrZipCode, lat, lon, gender
workers.CDR.Person.selectDistinct=true

# CDREdges
workers.CDREdges.PHONE_COMM.selectHeader='phoneMSISDNSource', 'phoneMSISDNTarget', 'dataSource', 'phoneCallDate', 'numberCalls', 'minutes', 'text', 'sms', 'classification', 'family'
workers.CDREdges.PHONE_COMM.selectFields=phoneMSISDNSource, phoneMSISDNTarget, dataSource, phoneCallDate, numberCalls, minutes, text, sms, classification, family
workers.CDREdges.PHONE_COMM.selectDistinct=false

############### Neo4j Worker components
neoWorkers.classname=dataengine.workers.neo4j.NeoWorkersComponent
neoWorkers.include=needsAmq, jobMgrType.msgT, jobMgrType.msgQ

# path to properties need to load CSV files into Neo4j
neoWorkers.TIDE.neo4jCsvLoadPropFile=workerConf/neo4j-tide.props
neoWorkers.I94Visa.neo4jCsvLoadPropFile=workerConf/neo4j-i94.props
neoWorkers.FB.neo4jCsvLoadPropFile=workerConf/neo4j-fb.props
neoWorkers.FBEdges.neo4jCsvLoadPropFile=workerConf/neo4j-fbedges.props
neoWorkers.CDR.neo4jCsvLoadPropFile=workerConf/neo4j-cdr.props
neoWorkers.CDREdges.neo4jCsvLoadPropFile=workerConf/neo4j-cdredges.props

